{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/beksultankaiypov/Development/code/phase4/react-hooks-practice-toy-tales/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport ToyForm from \"./ToyForm\";\nimport ToyContainer from \"./ToyContainer\";\n\nfunction App() {\n  _s();\n\n  const [showForm, setShowForm] = useState(false);\n  const [toys, setToys] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:3001/toys\").then(r => r.json()).then(toyData => {\n      setToys(toyData);\n    });\n  }, []);\n\n  function handleClick() {\n    setShowForm(showForm => !showForm);\n  }\n\n  function updateToyContainer(newToy) {\n    const updatedToyArray = [...toys, newToy];\n    setToys(updateToyContainer);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), showForm ? /*#__PURE__*/_jsxDEV(ToyForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 19\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Add a Toy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToyContainer, {\n      toys: toys\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"I+j82cOB0MbJaUg7aQ90zV/TbkQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/beksultankaiypov/Development/code/phase4/react-hooks-practice-toy-tales/src/components/App.js"],"names":["React","useEffect","useState","Header","ToyForm","ToyContainer","App","showForm","setShowForm","toys","setToys","fetch","then","r","json","toyData","handleClick","updateToyContainer","newToy","updatedToyArray"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAC,4BAAD,CAAL,CACCC,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMG,OAAO,IAAI;AACfL,MAAAA,OAAO,CAACK,OAAD,CAAP;AACD,KAJD;AAKD,GANQ,EAMP,EANO,CAAT;;AAQA,WAASC,WAAT,GAAuB;AACrBR,IAAAA,WAAW,CAAED,QAAD,IAAc,CAACA,QAAhB,CAAX;AACD;;AAED,WAASU,kBAAT,CAA4BC,MAA5B,EAAoC;AAClC,UAAMC,eAAe,GAAG,CAAC,GAAGV,IAAJ,EAAUS,MAAV,CAAxB;AACAR,IAAAA,OAAO,CAACO,kBAAD,CAAP;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGV,QAAQ,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,GAAiB,IAF5B,eAGE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAES,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAME,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEP;AAApB;AAAA;AAAA;AAAA;AAAA,YANF;AAAA,kBADF;AAUD;;GA/BQH,G;;KAAAA,G;AAiCT,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport Header from \"./Header\";\nimport ToyForm from \"./ToyForm\";\nimport ToyContainer from \"./ToyContainer\";\n\nfunction App() {\n  const [showForm, setShowForm] = useState(false);\n  const [toys, setToys] = useState([])\n\n  useEffect(() => {\n    fetch(\"http://localhost:3001/toys\")\n    .then(r => r.json())\n    .then(toyData => {\n      setToys(toyData)\n    })\n  },[])\n\n  function handleClick() {\n    setShowForm((showForm) => !showForm);\n  }\n\n  function updateToyContainer(newToy) {\n    const updatedToyArray = [...toys, newToy]\n    setToys(updateToyContainer)\n  }\n\n  return (\n    <>\n      <Header />\n      {showForm ? <ToyForm /> : null}\n      <div className=\"buttonContainer\">\n        <button onClick={handleClick}>Add a Toy</button>\n      </div>\n      <ToyContainer toys={toys}/>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}